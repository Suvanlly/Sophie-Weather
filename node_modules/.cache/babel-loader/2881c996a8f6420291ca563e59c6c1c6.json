{"ast":null,"code":"var _jsxFileName = \"/Users/sophiesun/Desktop/Sophie_P2/src/App.js\";\nimport React, { Component, Fragment } from 'react';\nimport styled from 'styled-components';\nimport Result from './Result';\nimport NotFound from './NotFound';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppTitle = styled.h3`\n  color: #ffffff;\n  opacity: 1;\n  height: auto;\n  margin-top: 100px;\n  font-size: 50px;\n  text-align: center;\n  transition: all .3s ease-in-out;\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n_c = AppTitle;\nconst InputWrapper = styled.form`\n  text-align: center;\n  margin-top: 50px;\n  height: 50px;\n`;\n_c2 = InputWrapper;\nconst SearchInput = styled.input`\n  font-size: 18px;\n  width: 250px;\n  border-radius: 10px;\n  border: none;\n  height: 50px;\n  margin-right: 10px;\n  &:focus {\n    outline: none;\n  }\n  &::placeholder {\n    font-size: 18px;\n    height: 50px;\n    line-height: 50px;\n  }\n`;\n_c3 = SearchInput;\nconst SearchButton = styled.button`\n  height: 50px;\n  width: 100px;\n  line-height: 50px;\n  border: none;\n  border-radius: 10px;\n  text-align: center;\n  font-size: 18px;\n  cursor: pointer;\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n_c4 = SearchButton;\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      inputValue: '',\n      weatherInfo: '',\n      weatherDisplay: false,\n      //为了在142行加入摄氏度符号\n      error: false\n    };\n\n    this.inputChange = e => {\n      this.setState({\n        inputValue: e.target.value\n      });\n    };\n\n    this.searchWeather = e => {\n      e.preventDefault(); //为了实现133行的onSubmit功能\n\n      const value = this.state.inputValue;\n      const geoAPIkey = 'AIzaSyBjoZIOKg9rrHX3UXgMf1YmvBpfTGT7puM';\n      const googleSource = `https://maps.googleapis.com/maps/api/geocode/json?address=${value}&key=${geoAPIkey}`;\n      fetch(googleSource).then(response => response.json()).then(googleData => {\n        console.log(googleSource);\n        console.log(googleData);\n        const lat = googleData.results[0].geometry.location.lat;\n        const lng = googleData.results[0].geometry.location.lng;\n        console.log(lat, lng);\n        const APIkey = '638d3030eafa245040554df387be8a9c';\n        const weatherSource = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lng}&units=metric&appid=${APIkey}`;\n        fetch(weatherSource).then(response => response.json()).then(weatherData => {\n          console.log(weatherData);\n          console.log(weatherData.daily);\n          const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'Nocvember', 'December'];\n          const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n          const currentDate = new window.Date();\n          const date = `${days[currentDate.getDay()]} ${currentDate.getDate()} ${months[currentDate.getMonth()]}`;\n          const iconId = weatherData.current.weather[0].icon;\n          const iconURL = `http://openweathermap.org/img/wn/${iconId}@2x.png`;\n          const weatherInfo = {\n            date: date,\n            cityName: weatherData.timezone,\n            temp: weatherData.current.temp,\n            temp_max: weatherData.daily[0].temp.max,\n            temp_min: weatherData.daily[0].temp.min,\n            description: weatherData.current.weather[0].description,\n            icon: iconURL,\n            forecastDaily: weatherData.daily\n          };\n          this.setState({\n            weatherInfo: weatherInfo,\n            weatherDisplay: true,\n            error: false\n          });\n        });\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          error: true,\n          weatherDisplay: false\n        });\n      });\n    };\n  }\n\n  render() {\n    const {\n      weatherDisplay,\n      inputValue,\n      error\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(AppTitle, {\n        children: \"Sophie's Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputWrapper, {\n        onSubmit: this.searchWeather,\n        children: [/*#__PURE__*/_jsxDEV(SearchInput, {\n          value: inputValue,\n          placeholder: \"Enter the City Name...\",\n          onChange: this.inputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SearchButton, {\n          onClick: this.searchWeather,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), weatherDisplay && /*#__PURE__*/_jsxDEV(Result, {\n        weather: this.state.weatherInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 28\n      }, this), error && /*#__PURE__*/_jsxDEV(NotFound, {\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"AppTitle\");\n$RefreshReg$(_c2, \"InputWrapper\");\n$RefreshReg$(_c3, \"SearchInput\");\n$RefreshReg$(_c4, \"SearchButton\");","map":{"version":3,"sources":["/Users/sophiesun/Desktop/Sophie_P2/src/App.js"],"names":["React","Component","Fragment","styled","Result","NotFound","AppTitle","h3","InputWrapper","form","SearchInput","input","SearchButton","button","App","state","inputValue","weatherInfo","weatherDisplay","error","inputChange","e","setState","target","value","searchWeather","preventDefault","geoAPIkey","googleSource","fetch","then","response","json","googleData","console","log","lat","results","geometry","location","lng","APIkey","weatherSource","weatherData","daily","months","days","currentDate","window","Date","date","getDay","getDate","getMonth","iconId","current","weather","icon","iconURL","cityName","timezone","temp","temp_max","max","temp_min","min","description","forecastDaily","catch","err","render"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport styled from 'styled-components'\nimport Result from './Result'\nimport NotFound from './NotFound'\n\nconst AppTitle = styled.h3`\n  color: #ffffff;\n  opacity: 1;\n  height: auto;\n  margin-top: 100px;\n  font-size: 50px;\n  text-align: center;\n  transition: all .3s ease-in-out;\n  &:hover {\n    transform: scale(1.1);\n  }\n`\nconst InputWrapper = styled.form`\n  text-align: center;\n  margin-top: 50px;\n  height: 50px;\n`\nconst SearchInput = styled.input`\n  font-size: 18px;\n  width: 250px;\n  border-radius: 10px;\n  border: none;\n  height: 50px;\n  margin-right: 10px;\n  &:focus {\n    outline: none;\n  }\n  &::placeholder {\n    font-size: 18px;\n    height: 50px;\n    line-height: 50px;\n  }\n`\nconst SearchButton = styled.button`\n  height: 50px;\n  width: 100px;\n  line-height: 50px;\n  border: none;\n  border-radius: 10px;\n  text-align: center;\n  font-size: 18px;\n  cursor: pointer;\n  &:hover {\n    opacity: 0.8;\n  }\n`\n\nclass App extends Component {\n  state = {\n    inputValue: '',\n    weatherInfo: '',\n    weatherDisplay: false, //为了在142行加入摄氏度符号\n    error: false\n  }\n\n  inputChange = (e) => {\n    this.setState({\n      inputValue: e.target.value\n    })\n  }\n\n  searchWeather = (e) => {\n    e.preventDefault(); //为了实现133行的onSubmit功能\n    const value = this.state.inputValue\n    const geoAPIkey = 'AIzaSyBjoZIOKg9rrHX3UXgMf1YmvBpfTGT7puM'\n    const googleSource = `https://maps.googleapis.com/maps/api/geocode/json?address=${value}&key=${geoAPIkey}`\n    fetch (googleSource)\n      .then(response => response.json())\n      .then(googleData => {\n        console.log(googleSource)\n        console.log(googleData)\n        const lat = googleData.results[0].geometry.location.lat\n        const lng = googleData.results[0].geometry.location.lng\n        console.log(lat, lng)\n\n        const APIkey = '638d3030eafa245040554df387be8a9c'\n        const weatherSource = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lng}&units=metric&appid=${APIkey}`\n        fetch(weatherSource)\n          .then(response => response.json())\n          .then(weatherData => {\n            console.log(weatherData)\n            console.log(weatherData.daily)\n            const months = [\n              'January',\n              'February',\n              'March',\n              'April',\n              'May',\n              'June',\n              'July',\n              'August',\n              'September',\n              'October',\n              'Nocvember',\n              'December',\n            ];\n            const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n            const currentDate = new window.Date();\n            const date = `${days[currentDate.getDay()]} ${currentDate.getDate()} ${months[currentDate.getMonth()]}`\n            const iconId = weatherData.current.weather[0].icon\n            const iconURL = `http://openweathermap.org/img/wn/${iconId}@2x.png`\n            const weatherInfo = {\n              date: date,\n              cityName: weatherData.timezone,\n              temp: weatherData.current.temp,\n              temp_max: weatherData.daily[0].temp.max,\n              temp_min: weatherData.daily[0].temp.min,\n              description: weatherData.current.weather[0].description,\n              icon: iconURL,\n              forecastDaily: weatherData.daily\n            }\n            this.setState({\n              weatherInfo: weatherInfo,\n              weatherDisplay: true,\n              error: false\n            })\n          })\n      })\n      .catch(err => {\n        console.log(err)\n        this.setState({\n          error: true,\n          weatherDisplay: false\n        })\n      })\n    }\n\n  render() { \n    const { weatherDisplay, inputValue, error } = this.state\n    return (\n      <Fragment>\n        <AppTitle>Sophie's Weather</AppTitle>\n        <InputWrapper onSubmit={this.searchWeather}>\n          <SearchInput \n            value={inputValue} \n            placeholder='Enter the City Name...' \n            onChange={this.inputChange}\n          />\n          <SearchButton onClick={this.searchWeather}>Search</SearchButton>\n        </InputWrapper>\n        {weatherDisplay && <Result weather= {this.state.weatherInfo} />}\n        {error && <NotFound error={error} />}\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}