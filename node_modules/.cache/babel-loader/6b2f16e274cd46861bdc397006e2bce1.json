{"ast":null,"code":"var _jsxFileName = \"/Users/sophiesun/Desktop/Sophie_P2/src/Result.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport ForecastDay from './ForecastDay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst OutputWrapper = styled.div`\n  display: flex;\n  ${''\n/* justify-content: space-between; */\n}\n  margin: 60px auto;\n  color: #ffffff;\n  text-align: center;\n`;\n_c = OutputWrapper;\nconst LocationWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin-left: 100px;\n  ${''\n/* flex-basis: 100%; */\n}\n`;\n_c2 = LocationWrapper;\nconst CityName = styled.p`\n  font-size: 50px;\n  font-weight: 800;\n  padding-bottom: 10px;\n`;\n_c3 = CityName;\nconst Date = styled.p`\n  font-size: 25px;\n  font-weight: 700;\n`;\n_c4 = Date;\nconst CurrentWeatherWrapper = styled.div`\n  flex-basis: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  margin-bottom: 20px;\n`;\n_c5 = CurrentWeatherWrapper;\nconst Temp = styled.p`\n  font-size: 70px;\n  font-weight: 800;\n  font-family: 'Merriweather', serif;\n  padding-bottom: 30px;\n`;\n_c6 = Temp;\nconst Description = styled.p`\n  font-size: 30px;\n  padding-bottom: 10px;\n`;\n_c7 = Description;\nconst TempRange = styled.p`\n  font-size: 20px;\n  font-family: 'Merriweather', serif;\n`;\n_c8 = TempRange;\nconst IconWrapper = styled.img`\n  width: 100px;\n  height: 100px;\n  margin: 0 auto;\n`;\n_c9 = IconWrapper;\nconst ForecastWrapper = styled.div`\n  border-radius: 10px;\n  flex-basis: 100%;\n  margin: 0 10px;\n  background-color: rgba(300, 200, 400, 0.4);\n  overflow: hidden;\n`;\n_c10 = ForecastWrapper;\nconst Day7 = styled.p`\n  font-size: 25px;\n  text-align: center;\n  color: #ffffff;\n  font-weight: 800;\n`;\n_c11 = Day7;\nconst Forecast = styled.div`\n  position: relative;\n  display: flex;\n  overflow-x: scroll;\n  overflow-y: hidden;\n  scrollbar-color: lightgray #ffffff;\n  scrollbar-width: thin;\n  margin-top: 20px;\n  padding-bottom: 20px;\n`;\n_c12 = Forecast;\n\nconst Result = ({\n  weather\n}) => {\n  const {\n    cityName,\n    date,\n    temp,\n    description,\n    temp_min,\n    temp_max,\n    icon,\n    forecastDaily\n  } = weather;\n  const forecast = forecastDaily.map(item => /*#__PURE__*/_jsxDEV(ForecastDay, {\n    temp: item.temp.day,\n    icon: item.weather[0].icon,\n    main: item.weather[0].main\n  }, Math.random(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(OutputWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(LocationWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(CityName, {\n          children: cityName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Date, {\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CurrentWeatherWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(IconWrapper, {\n          src: icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Temp, {\n          children: [temp, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Description, {\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TempRange, {\n          children: [temp_min, \"\\xB0C ~ \", temp_max, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ForecastWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Day7, {\n        children: \"Next 7 Days Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Forecast, {\n        children: forecast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c13 = Result;\nexport default Result;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13;\n\n$RefreshReg$(_c, \"OutputWrapper\");\n$RefreshReg$(_c2, \"LocationWrapper\");\n$RefreshReg$(_c3, \"CityName\");\n$RefreshReg$(_c4, \"Date\");\n$RefreshReg$(_c5, \"CurrentWeatherWrapper\");\n$RefreshReg$(_c6, \"Temp\");\n$RefreshReg$(_c7, \"Description\");\n$RefreshReg$(_c8, \"TempRange\");\n$RefreshReg$(_c9, \"IconWrapper\");\n$RefreshReg$(_c10, \"ForecastWrapper\");\n$RefreshReg$(_c11, \"Day7\");\n$RefreshReg$(_c12, \"Forecast\");\n$RefreshReg$(_c13, \"Result\");","map":{"version":3,"sources":["/Users/sophiesun/Desktop/Sophie_P2/src/Result.js"],"names":["React","styled","ForecastDay","OutputWrapper","div","LocationWrapper","CityName","p","Date","CurrentWeatherWrapper","Temp","Description","TempRange","IconWrapper","img","ForecastWrapper","Day7","Forecast","Result","weather","cityName","date","temp","description","temp_min","temp_max","icon","forecastDaily","forecast","map","item","day","main","Math","random"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport ForecastDay from './ForecastDay'\n\nconst OutputWrapper = styled.div`\n  display: flex;\n  ${'' /* justify-content: space-between; */}\n  margin: 60px auto;\n  color: #ffffff;\n  text-align: center;\n`\nconst LocationWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin-left: 100px;\n  ${'' /* flex-basis: 100%; */}\n`\nconst CityName = styled.p`\n  font-size: 50px;\n  font-weight: 800;\n  padding-bottom: 10px;\n`\nconst Date = styled.p`\n  font-size: 25px;\n  font-weight: 700;\n`\nconst CurrentWeatherWrapper = styled.div`\n  flex-basis: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  margin-bottom: 20px;\n`\nconst Temp = styled.p`\n  font-size: 70px;\n  font-weight: 800;\n  font-family: 'Merriweather', serif;\n  padding-bottom: 30px;\n`\nconst Description = styled.p`\n  font-size: 30px;\n  padding-bottom: 10px;\n`\nconst TempRange = styled.p`\n  font-size: 20px;\n  font-family: 'Merriweather', serif;\n`\nconst IconWrapper = styled.img`\n  width: 100px;\n  height: 100px;\n  margin: 0 auto;\n`\nconst ForecastWrapper = styled.div`\n  border-radius: 10px;\n  flex-basis: 100%;\n  margin: 0 10px;\n  background-color: rgba(300, 200, 400, 0.4);\n  overflow: hidden;\n`\nconst Day7 = styled.p`\n  font-size: 25px;\n  text-align: center;\n  color: #ffffff;\n  font-weight: 800;\n`\nconst Forecast = styled.div`\n  position: relative;\n  display: flex;\n  overflow-x: scroll;\n  overflow-y: hidden;\n  scrollbar-color: lightgray #ffffff;\n  scrollbar-width: thin;\n  margin-top: 20px;\n  padding-bottom: 20px;\n`\nconst Result = ({weather}) => {\n  const{ cityName, date, temp, description, temp_min, temp_max, icon, forecastDaily}  = weather;\n\n  const forecast = forecastDaily.map(item => (\n    <ForecastDay\n      key= {Math.random()}\n      temp = {item.temp.day}\n      icon = {item.weather[0].icon}\n      main = {item.weather[0].main}\n    />\n  ))\n  return (\n    <>\n      <OutputWrapper>\n        <LocationWrapper>\n          <CityName>{cityName}</CityName>\n          <Date>{date}</Date>\n        </LocationWrapper>\n        <CurrentWeatherWrapper>\n          {<IconWrapper src={icon} />}\n          {<Temp>{temp}°C</Temp>}\n          <Description>{description}</Description>\n          {<TempRange>{temp_min}°C ~ {temp_max}°C</TempRange>}\n        </CurrentWeatherWrapper>\n        \n        \n        \n      </OutputWrapper>\n      <ForecastWrapper>\n        <Day7>Next 7 Days Forecast</Day7>\n        <Forecast>{forecast}</Forecast>\n      </ForecastWrapper>\n    </>\n  )\n}\n\nexport default Result"]},"metadata":{},"sourceType":"module"}